# This is a basic workflow to help you get started with Actions

name: DeployFlogoTIBCO_Platform

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  # push:
  #   branches: [ "master" ]
  #   paths:
  #     - '**.flogo'
  # pull_request:
  #   branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      tags:
        description: 'Launch build'
        required: false
        type: boolean

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a set of commands using the runners shell
      - name: Deploy FLogo app in TIBCO Platform
        run: |          
          # BASE URL
          BASE_URL=https://flogo.dp1.atsfr-emea.azure.dataplanes.pro/tibco/flogo/cq35s2ijcp26pefl1dmg/
          # Key:
          TOKEN=CIC~deSitXbHS1eI19RvAOoUlM_u
          # Flogo File to Deploy:
          FLOGO_FILE=src/customer-api.flogo
          APP_NAME=customer-api-slawekm
          # Testing the API
          echo Testing Connection:
          curl -X 'GET' \
            "$BASE_URL/public/v1/dp/flogoversions" \
            -H 'accept: application/json' \
            -H "Authorization: Bearer $TOKEN" \
            -H "X-Atmosphere-Token: $TOKEN" 
          # do a post on /v1/dp/builds
          echo creating a build...
          # Get the build ID
          BUILD_ID=$(curl -X 'POST' \
            "$BASE_URL/public/v1/dp/builds" \
            -H 'accept: application/json' \
            -H "Authorization: Bearer $TOKEN" \
            -H 'Content-Type: multipart/form-data' \
            -H "X-Atmosphere-Token: $TOKEN" \
            -F "app.json=@$FLOGO_FILE" | jq -r  '.buildId')
          echo BuildID: $BUILD_ID 
          sleep 5
          # /v1/dp/builds/{buildId}/deploy
          # Deploy app using buildId (scale to 1)
          APP_ID=$(curl -X 'POST' \
            "$BASE_URL/public/v1/dp/builds/$BUILD_ID/deploy" \
            -H 'accept: application/json' \
            -H "Authorization: Bearer $TOKEN" \
            -H 'Content-Type: application/json' \
            -H "X-Atmosphere-Token: $TOKEN" \
            -d "{\"appId\":\"\",\"buildId\":\"$BUILD_ID\",\"eula\":true,\"appName\":\"$APP_NAME\",\"tags\":[],\"replicas\": 1,\"resourceLimits\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"512Mi\"},\"requests\":{\"cpu\":\"125m\",\"memory\":\"256Mi\"}},\"enableServiceMesh\":false,\"enableAutoscaling\":false}" | jq -r  '.appId')
          echo Application deployed with APP ID: $APP_ID
        env:
          TAGS: 